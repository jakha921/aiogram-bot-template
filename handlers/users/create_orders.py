from aiogram import types

from loader import dp, bot
from data.products import pizza, book, regular_shipping, fast_shipping, pickup_shipping
from keyboards.inline.create_keyboard import build_keyboard



@dp.message_handler(commands='order_pizza')
async def orger_pizza(msg: types.Message):
    caption = '–£–¥–∏–≤–∏—Ç–µ —Å–≤–æ—é <b>–≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É</b> –Ω–µ–æ–±—ã—á–Ω–æ–π –ø–∏—Ü—Ü–µ–π ‚ù§Ô∏è '
    caption += '–ö–æ–ª–±–∞—Å–∫–∏ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, –Ω–µ–∂–Ω—ã–π —Å—ã—Ä –º–æ—Ü–∞—Ä–µ–ª–ª–∞ –∏ —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å üòã'
    caption += '\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>50.000.00</b> UZS'
    photo_url = 'https://bellissimo.uz/_next/image?url=https%3A%2F%2Fio.bellissimo.uz%2Fimages%2F6d45a283-a19c-4cea-a45a-99a4b690e0cf.jpg&w=750&q=75'
    await msg.answer_photo(photo_url, caption=caption, parse_mode='HTML', reply_markup=build_keyboard('pizza'))


@dp.message_handler(commands='order_book')
async def order_book(msg: types.Message):
    caption = '–í–æ–π–Ω–∞ –∏ –º–∏—Ä. –ê–ª–µ–∫—Å–æ–Ω–¥—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á –¢–æ–ª—Å—Ç–æ–π\n'
    caption += '–†–æ–º–∞–Ω-—ç–ø–æ–ø–µ—è <i>–õ—å–≤–∞ –ù–∏–∫–æ–ª–∞–µ–≤–∏—á–∞ –¢–æ–ª—Å—Ç–æ–≥–æ</i>, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Ä—É—Å—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –≤ —ç–ø–æ—Ö—É –≤–æ–π–Ω –ø—Ä–æ—Ç–∏–≤ –ù–∞–ø–æ–ª–µ–æ–Ω–∞ –≤ 1805-1812 –≥–æ–¥–∞—Ö. \n'
    caption += '–≠–ø–∏–ª–æ–≥ —Ä–æ–º–∞–Ω–∞ –¥–æ–≤–æ–¥–∏—Ç –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–æ 1820 –≥–æ–¥–∞.'
    caption += '\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>4 USD</b>'
    photo_url = 'https://pbs.twimg.com/media/EWxVndaXsAQGCzm.jpg'
    await msg.answer_photo(photo_url, caption=caption, parse_mode='HTML', reply_markup=build_keyboard('book'))
    

# create invoice
@dp.callback_query_handler(text="product:book")
async def book_invoice(call: types.CallbackQuery):
    await bot.send_invoice(chat_id=call.from_user.id, 
                           **book.generate_invoice(),
                            payload="123456")
    await call.answer()
    
@dp.callback_query_handler(text="product:pizza")
async def book_invoice(call: types.CallbackQuery):
    await bot.send_invoice(chat_id=call.from_user.id,
                          **pizza.generate_invoice (),
                            payload="123457")
    await call.answer()


# check addres
@dp.shipping_query_handler ()
async def choose_shipping(query: types.ShippingQuery):
    if query.shipping_address.country_code != "UZ":
        await bot.answer_shipping_query(shipping_query_id=query.id,
                                        ok=False,
                                        error_message="–ú—ã –Ω–µ –º–æ–∂–µ–º –¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞ –≥—Ä–∞–Ω–∏–∑—É")
        
    elif query.shipping_address.city.lower() == "tashkent":
        await bot.answer_shipping_query(shipping_query_id=query.id,
                                        shipping_options=[regular_shipping, fast_shipping, pickup_shipping],
                                        ok=True)
    else:
        await bot.answer_shipping_query(shipping_query_id=query.id,
                                        shipping_options=[regular_shipping],
                                        ok=True)